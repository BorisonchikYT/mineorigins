// –û–ì–†–û–ú–ù–ê–Ø –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∫–∞–ø—á —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
const CAPTCHA_DATABASE = {
    math: [
        // –õ–µ–≥–∫–∏–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è
        { id: 1, type: 'math', question: '7 + 3 = ?', answer: '10', difficulty: 'easy' },
        { id: 2, type: 'math', question: '15 - 8 = ?', answer: '7', difficulty: 'easy' },
        { id: 3, type: 'math', question: '5 √ó 4 = ?', answer: '20', difficulty: 'easy' },
        { id: 4, type: 'math', question: '12 √∑ 3 = ?', answer: '4', difficulty: 'easy' },
        { id: 5, type: 'math', question: '9 + 6 = ?', answer: '15', difficulty: 'easy' },
        { id: 6, type: 'math', question: '20 - 5 = ?', answer: '15', difficulty: 'easy' },
        { id: 7, type: 'math', question: '3 √ó 7 = ?', answer: '21', difficulty: 'easy' },
        { id: 8, type: 'math', question: '18 √∑ 2 = ?', answer: '9', difficulty: 'easy' },
        { id: 9, type: 'math', question: '8 + 9 = ?', answer: '17', difficulty: 'easy' },
        { id: 10, type: 'math', question: '25 - 7 = ?', answer: '18', difficulty: 'easy' },

        // –°—Ä–µ–¥–Ω–∏–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è
        { id: 11, type: 'math', question: '8 + 6 - 3 = ?', answer: '11', difficulty: 'medium' },
        { id: 12, type: 'math', question: '2 √ó 3 + 5 = ?', answer: '11', difficulty: 'medium' },
        { id: 13, type: 'math', question: '20 - 7 + 3 = ?', answer: '16', difficulty: 'medium' },
        { id: 14, type: 'math', question: '9 √∑ 3 √ó 2 = ?', answer: '6', difficulty: 'medium' },
        { id: 15, type: 'math', question: '15 + 8 - 4 = ?', answer: '19', difficulty: 'medium' },
        { id: 16, type: 'math', question: '4 √ó 3 + 7 = ?', answer: '19', difficulty: 'medium' },
        { id: 17, type: 'math', question: '24 √∑ 4 √ó 2 = ?', answer: '12', difficulty: 'medium' },
        { id: 18, type: 'math', question: '18 - 5 + 3 = ?', answer: '16', difficulty: 'medium' },
        { id: 19, type: 'math', question: '6 √ó 2 + 8 = ?', answer: '20', difficulty: 'medium' },
        { id: 20, type: 'math', question: '30 √∑ 5 √ó 3 = ?', answer: '18', difficulty: 'medium' },
    ],

    sequence: [
        // –ë—É–∫–≤–µ–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        { id: 1, type: 'sequence', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', sequence: ['A', 'B', 'C'], answer: 'ABC' },
        { id: 2, type: 'sequence', instruction: '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –±—É–∫–≤–µ–Ω–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', sequence: ['X', 'Y', 'Z'], answer: 'XYZ' },
        { id: 3, type: 'sequence', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤', sequence: ['M', 'N', 'O', 'P'], answer: 'MNOP' },
        { id: 4, type: 'sequence', instruction: '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∞–ª—Ñ–∞–≤–∏—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫', sequence: ['C', 'D', 'E', 'F'], answer: 'CDEF' },

        // –¶–∏—Ñ—Ä–æ–≤—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        { id: 5, type: 'sequence', instruction: '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ü–∏—Ñ—Ä–æ–≤—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', sequence: ['3', '7', '1', '9'], answer: '3719' },
        { id: 6, type: 'sequence', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —á–∏—Å–ª–∞', sequence: ['5', '2', '8', '4', '1'], answer: '52841' },
        { id: 7, type: 'sequence', instruction: '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–∏—Ñ—Ä', sequence: ['9', '6', '3', '0', '7'], answer: '96307' },
        { id: 8, type: 'sequence', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π —Ä—è–¥', sequence: ['1', '4', '7', '2', '5', '8'], answer: '147258' },

        // –°–∏–º–≤–æ–ª—å–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        { id: 9, type: 'sequence', instruction: '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–∏–º–≤–æ–ª—ã', sequence: ['@', '#', '$', '%'], answer: '@#$%' },
        { id: 10, type: 'sequence', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã', sequence: ['&', '*', '(', ')'], answer: '&*()' },

        // –≠–º–æ–¥–∑–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        { id: 11, type: 'sequence', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —ç–º–æ–¥–∑–∏', sequence: ['üòä', 'üéÆ', 'üöÄ'], answer: 'üòäüéÆüöÄ' },
        { id: 12, type: 'sequence', instruction: '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–º–∞–π–ª–∏–∫–∏', sequence: ['üê±', 'üê∂', 'üê≠', 'üêπ'], answer: 'üê±üê∂üê≠üêπ' },
        { id: 13, type: 'sequence', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Ñ—Ä—É–∫—Ç—ã', sequence: ['üçé', 'üçå', 'üçá', 'üçì'], answer: 'üçéüçåüçáüçì' },
        { id: 14, type: 'sequence', instruction: '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç', sequence: ['üöó', 'üöÇ', '‚úàÔ∏è', 'üö¢'], answer: 'üöóüöÇ‚úàÔ∏èüö¢' },
        { id: 15, type: 'sequence', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Ü–≤–µ—Ç–∞', sequence: ['üî¥', 'üü¢', 'üîµ', 'üü°'], answer: 'üî¥üü¢üîµüü°' },

        // –°–ª–æ–∂–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        { id: 16, type: 'sequence', instruction: '–°–º–µ—à–∞–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', sequence: ['A', '1', 'üòä', 'üî¥'], answer: 'A1üòäüî¥' },
        { id: 17, type: 'sequence', instruction: '–ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä', sequence: ['A', '2', 'B', '4', 'C', '6'], answer: 'A2B4C6' },
        { id: 18, type: 'sequence', instruction: '–î–ª–∏–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', sequence: ['1', '2', '3', '4', '5', '6', '7'], answer: '1234567' },
        { id: 19, type: 'sequence', instruction: '–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã', sequence: ['‚≠ê', 'üî∫', 'üî∑', 'üí†', 'üî∂'], answer: '‚≠êüî∫üî∑üí†üî∂' },
        { id: 20, type: 'sequence', instruction: '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã', sequence: ['üéµ', 'üé∂', 'üé∏', 'üéπ', 'ü•Å'], answer: 'üéµüé∂üé∏üéπü•Å' }
    ],

    logic: [
        // –ó–∞–≥–∞–¥–∫–∏ –∏ –ª–æ–≥–∏–∫–∞
        { id: 1, type: 'logic', question: '–ß—Ç–æ —Ç—è–∂–µ–ª–µ–µ: 1 –∫–≥ –ø—É—Ö–∞ –∏–ª–∏ 1 –∫–≥ –∂–µ–ª–µ–∑–∞?', options: ['1 –∫–≥ –ø—É—Ö–∞', '1 –∫–≥ –∂–µ–ª–µ–∑–∞', '–û–¥–∏–Ω–∞–∫–æ–≤–æ'], answer: '–û–¥–∏–Ω–∞–∫–æ–≤–æ' },
        { id: 2, type: 'logic', question: '–°–∫–æ–ª—å–∫–æ –º–µ—Å—è—Ü–µ–≤ –≤ –≥–æ–¥—É –∏–º–µ—é—Ç 28 –¥–Ω–µ–π?', options: ['1 –º–µ—Å—è—Ü', '2 –º–µ—Å—è—Ü–∞', '–í—Å–µ –º–µ—Å—è—Ü—ã'], answer: '–í—Å–µ –º–µ—Å—è—Ü—ã' },
        { id: 3, type: 'logic', question: '–ß—Ç–æ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ –≥–ª–∞–∑–∞–º–∏?', options: ['–°–æ–Ω', '–¢–µ–º–Ω–æ—Ç—É', '–ù–∏—á–µ–≥–æ'], answer: '–°–æ–Ω' },
        { id: 4, type: 'logic', question: '–ß—Ç–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –≤–∞–º, –Ω–æ –¥—Ä—É–≥–∏–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —ç—Ç–æ —á–∞—â–µ?', options: ['–ò–º—è', '–¢–µ–ª–µ—Ñ–æ–Ω', '–î–µ–Ω—å–≥–∏'], answer: '–ò–º—è' },
        { id: 5, type: 'logic', question: '–ß—Ç–æ –∏–¥–µ—Ç –≤–≤–µ—Ä—Ö –∏ –≤–Ω–∏–∑, –Ω–æ –Ω–µ –¥–≤–∏–≥–∞–µ—Ç—Å—è?', options: ['–õ–µ—Å—Ç–Ω–∏—Ü–∞', '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞', '–õ–∏—Ñ—Ç'], answer: '–õ–µ—Å—Ç–Ω–∏—Ü–∞' },
        { id: 6, type: 'logic', question: '–ß—Ç–æ –∏–º–µ–µ—Ç –≥–æ—Ä–æ–¥–∞, –Ω–æ –Ω–µ—Ç –¥–æ–º–æ–≤?', options: ['–ö–∞—Ä—Ç–∞', '–°–æ–Ω', '–ú–µ—á—Ç–∞'], answer: '–ö–∞—Ä—Ç–∞' },
        { id: 7, type: 'logic', question: '–ß—Ç–æ –º–æ–∂–Ω–æ —Ä–∞–∑–±–∏—Ç—å, –Ω–µ –∫–∞—Å–∞—è—Å—å?', options: ['–û–±–µ—â–∞–Ω–∏–µ', '–°—Ç–µ–∫–ª–æ', '–°–µ—Ä–¥—Ü–µ'], answer: '–û–±–µ—â–∞–Ω–∏–µ' },
        { id: 8, type: 'logic', question: '–ß—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –º–æ–∫—Ä—ã–º –ø—Ä–∏ —Å—É—à–∫–µ?', options: ['–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ', '–í–æ–ª–æ—Å—ã', '–¢–µ–ª–æ'], answer: '–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ' },
        { id: 9, type: 'logic', question: '–ß—Ç–æ –∏–º–µ–µ—Ç –∫–ª—é—á, –Ω–æ –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–∫—Ä—ã—Ç—å –∑–∞–º–æ–∫?', options: ['–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞', '–ü–∏–∞–Ω–∏–Ω–æ', '–ö–∞—Ä—Ç–∞'], answer: '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞' },
        { id: 10, type: 'logic', question: '–ß—Ç–æ –ø–æ–ª–Ω–æ–µ –¥—ã—Ä, –Ω–æ –¥–µ—Ä–∂–∏—Ç –≤–æ–¥—É?', options: ['–ì—É–±–∫–∞', '–†–µ—à–µ—Ç–æ', '–°–µ—Ç–∫–∞'], answer: '–ì—É–±–∫–∞' },

        // –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ª–æ–≥–∏–∫–∞
        { id: 11, type: 'logic', question: '–ï—Å–ª–∏ 2x = 10, —Ç–æ x = ?', options: ['4', '5', '6'], answer: '5' },
        { id: 12, type: 'logic', question: '–°–∫–æ–ª—å–∫–æ —É–≥–ª–æ–≤ —É —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞?', options: ['3', '4', '5'], answer: '3' },
        { id: 13, type: 'logic', question: '–ß—Ç–æ –±–æ–ª—å—à–µ: 3/4 –∏–ª–∏ 2/3?', options: ['3/4', '2/3', '–û–¥–∏–Ω–∞–∫–æ–≤–æ'], answer: '3/4' },
        { id: 14, type: 'logic', question: '–°–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –≤ 2 –º–∏–Ω—É—Ç–∞—Ö?', options: ['120', '100', '60'], answer: '120' },
        { id: 15, type: 'logic', question: '–ß—Ç–æ –∏–¥–µ—Ç –ø–æ—Å–ª–µ 999?', options: ['1000', '999.1', '100'], answer: '1000' },

        // –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        { id: 16, type: 'logic', question: '–ö–∞–∫–æ–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "J"?', options: ['Java', 'Python', 'C++'], answer: 'Java' },
        { id: 17, type: 'logic', question: '–ß—Ç–æ —Ç–∞–∫–æ–µ HTML?', options: ['–Ø–∑—ã–∫ —Ä–∞–∑–º–µ—Ç–∫–∏', '–Ø–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è', '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö'], answer: '–Ø–∑—ã–∫ —Ä–∞–∑–º–µ—Ç–∫–∏' },
        { id: 18, type: 'logic', question: '–°–∫–æ–ª—å–∫–æ –±–∏—Ç–æ–≤ –≤ –±–∞–π—Ç–µ?', options: ['8', '16', '32'], answer: '8' },
        { id: 19, type: 'logic', question: '–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç CPU?', options: ['–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä', '–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å', '–ñ–µ—Å—Ç–∫–∏–π –¥–∏—Å–∫'], answer: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä' },
        { id: 20, type: 'logic', question: '–ö–∞–∫–æ–π –ø—Ä–æ—Ç–æ–∫–æ–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü?', options: ['HTTP', 'FTP', 'SMTP'], answer: 'HTTP' },

        // –ù–∞—É–∫–∞ –∏ –ø—Ä–∏—Ä–æ–¥–∞
        { id: 21, type: 'logic', question: '–°–∫–æ–ª—å–∫–æ –ø–ª–∞–Ω–µ—Ç –≤ –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ?', options: ['8', '9', '10'], answer: '8' },
        { id: 22, type: 'logic', question: '–ö–∞–∫–∞—è –ø–ª–∞–Ω–µ—Ç–∞ –∏–∑–≤–µ—Å—Ç–Ω–∞ –∫–æ–ª—å—Ü–∞–º–∏?', options: ['–°–∞—Ç—É—Ä–Ω', '–Æ–ø–∏—Ç–µ—Ä', '–£—Ä–∞–Ω'], answer: '–°–∞—Ç—É—Ä–Ω' },
        { id: 23, type: 'logic', question: '–ß—Ç–æ –∏–∑–º–µ—Ä—è–µ—Ç—Å—è –≤ –≥–µ—Ä—Ü–∞—Ö?', options: ['–ß–∞—Å—Ç–æ—Ç–∞', '–°–∫–æ—Ä–æ—Å—Ç—å', '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞'], answer: '–ß–∞—Å—Ç–æ—Ç–∞' },
        { id: 24, type: 'logic', question: '–ö–∞–∫–æ–π –≥–∞–∑ –º—ã –≤–¥—ã—Ö–∞–µ–º?', options: ['–ö–∏—Å–ª–æ—Ä–æ–¥', '–£–≥–ª–µ–∫–∏—Å–ª—ã–π –≥–∞–∑', '–ê–∑–æ—Ç'], answer: '–ö–∏—Å–ª–æ—Ä–æ–¥' },
        { id: 25, type: 'logic', question: '–ß—Ç–æ —Ç–∞–∫–æ–µ H‚ÇÇO?', options: ['–í–æ–¥–∞', '–í–æ–∑–¥—É—Ö', '–û–≥–æ–Ω—å'], answer: '–í–æ–¥–∞' },

        // –ì–µ–æ–≥—Ä–∞—Ñ–∏—è
        { id: 26, type: 'logic', question: '–°—Ç–æ–ª–∏—Ü–∞ –§—Ä–∞–Ω—Ü–∏–∏?', options: ['–ü–∞—Ä–∏–∂', '–õ–æ–Ω–¥–æ–Ω', '–ë–µ—Ä–ª–∏–Ω'], answer: '–ü–∞—Ä–∏–∂' },
        { id: 27, type: 'logic', question: '–°–∞–º–∞—è –¥–ª–∏–Ω–Ω–∞—è —Ä–µ–∫–∞ –≤ –º–∏—Ä–µ?', options: ['–ù–∏–ª', '–ê–º–∞–∑–æ–Ω–∫–∞', '–Ø–Ω—Ü–∑—ã'], answer: '–ù–∏–ª' },
        { id: 28, type: 'logic', question: '–°–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–æ–≤ –Ω–∞ –ó–µ–º–ª–µ?', options: ['7', '6', '5'], answer: '7' },
        { id: 29, type: 'logic', question: '–°–∞–º–∞—è –±–æ–ª—å—à–∞—è —Å—Ç—Ä–∞–Ω–∞ –ø–æ –ø–ª–æ—â–∞–¥–∏?', options: ['–†–æ—Å—Å–∏—è', '–ö–∞–Ω–∞–¥–∞', '–ö–∏—Ç–∞–π'], answer: '–†–æ—Å—Å–∏—è' },
        { id: 30, type: 'logic', question: '–í –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–∏—Ä–∞–º–∏–¥–∞ –•–µ–æ–ø—Å–∞?', options: ['–ï–≥–∏–ø–µ—Ç', '–ú–µ–∫—Å–∏–∫–∞', '–ö–∏—Ç–∞–π'], answer: '–ï–≥–∏–ø–µ—Ç' }
    ],

    memory: [
        // –ö–æ—Ä–æ—Ç–∫–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        { id: 1, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–≤–µ—Ç–æ–≤', sequence: ['üî¥', 'üü¢', 'üîµ', 'üü°'], displayTime: 3000, answer: 'üî¥üü¢üîµüü°' },
        { id: 2, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –ø–æ—Ä—è–¥–æ–∫ —Ñ–∏–≥—É—Ä', sequence: ['‚≠ê', 'üî∫', 'üî∑', 'üí†', 'üî∂'], displayTime: 4000, answer: '‚≠êüî∫üî∑üí†üî∂' },
        { id: 3, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç–º–æ–¥–∑–∏', sequence: ['üòä', 'üéÆ', 'üöÄ', 'üìö', 'üéµ', 'üèÜ'], displayTime: 5000, answer: 'üòäüéÆüöÄüìöüéµüèÜ' },

        // –ß–∏—Å–ª–æ–≤—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–∞–º—è—Ç–∏
        { id: 4, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Ü–∏—Ñ—Ä—ã', sequence: ['7', '2', '9', '4'], displayTime: 3000, answer: '7294' },
        { id: 5, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π —Ä—è–¥', sequence: ['3', '8', '1', '6', '2'], displayTime: 4000, answer: '38162' },
        { id: 6, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –¥–ª–∏–Ω–Ω–æ–µ —á–∏—Å–ª–æ', sequence: ['5', '9', '2', '7', '4', '1'], displayTime: 5000, answer: '592741' },

        // –ë—É–∫–≤–µ–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–∞–º—è—Ç–∏
        { id: 7, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –±—É–∫–≤—ã', sequence: ['C', 'A', 'T'], displayTime: 3000, answer: 'CAT' },
        { id: 8, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Å–ª–æ–≤–æ', sequence: ['D', 'O', 'G'], displayTime: 3000, answer: 'DOG' },
        { id: 9, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—É', sequence: ['U', 'S', 'A'], displayTime: 3000, answer: 'USA' },

        // –°–º–µ—à–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        { id: 10, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Ü–∏—Ñ—Ä—ã –∏ –±—É–∫–≤—ã', sequence: ['A', '1', 'B', '2'], displayTime: 4000, answer: 'A1B2' },
        { id: 11, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã', sequence: ['üî¥', 'A', '3', '‚≠ê'], displayTime: 4000, answer: 'üî¥A3‚≠ê' },
        { id: 12, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', sequence: ['7', 'üîµ', 'X', 'üéµ'], displayTime: 5000, answer: '7üîµXüéµ' },

        // –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        { id: 13, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Ñ—Ä—É–∫—Ç—ã', sequence: ['üçé', 'üçå', 'üçá', 'üçì'], displayTime: 4000, answer: 'üçéüçåüçáüçì' },
        { id: 14, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç', sequence: ['üöó', 'üöÇ', '‚úàÔ∏è', 'üö¢'], displayTime: 4000, answer: 'üöóüöÇ‚úàÔ∏èüö¢' },
        { id: 15, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –∂–∏–≤–æ—Ç–Ω—ã—Ö', sequence: ['üê±', 'üê∂', 'üê≠', 'üêπ'], displayTime: 4000, answer: 'üê±üê∂üê≠üêπ' },

        // –°–ª–æ–∂–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        { id: 16, type: 'memory', instruction: '–î–ª–∏–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç–º–æ–¥–∑–∏', sequence: ['üòä', 'üåü', 'üöÄ', 'üì±', 'üíª', 'üéÆ', 'üèÜ'], displayTime: 6000, answer: 'üòäüåüüöÄüì±üíªüéÆüèÜ' },
        { id: 17, type: 'memory', instruction: '–ß–∏—Å–ª–∞ –∏ —Å–∏–º–≤–æ–ª—ã', sequence: ['1', 'üî¥', '2', 'üü¢', '3', 'üîµ'], displayTime: 5000, answer: '1üî¥2üü¢3üîµ' },
        { id: 18, type: 'memory', instruction: '–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', sequence: ['A', '7', 'üòä', 'üî¥', 'Z', '9'], displayTime: 6000, answer: 'A7üòäüî¥Z9' },
        { id: 19, type: 'memory', instruction: '–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è —Ç–µ–º–∞', sequence: ['üéµ', 'üé∏', 'üéπ', 'ü•Å', 'üé§'], displayTime: 5000, answer: 'üéµüé∏üéπü•Åüé§' },
        // –°–ª–æ–∂–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–∞–º—è—Ç–∏
        { id: 20, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã', sequence: ['‚ûï', '‚ûñ', '‚úñÔ∏è', '‚ûó'], displayTime: 4000, answer: '‚ûï‚ûñ‚úñÔ∏è‚ûó' },
        { id: 21, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –ø–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è', sequence: ['‚òÄÔ∏è', 'üåßÔ∏è', '‚õàÔ∏è', '‚ùÑÔ∏è'], displayTime: 4000, answer: '‚òÄÔ∏èüåßÔ∏è‚õàÔ∏è‚ùÑÔ∏è' },
        { id: 22, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —ç–º–æ–¥–∑–∏', sequence: ['‚öΩ', 'üèÄ', 'üéæ', 'üèê'], displayTime: 4000, answer: '‚öΩüèÄüéæüèê' },
        { id: 23, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã', sequence: ['üì±', 'üíª', '‚åö', 'üì∑'], displayTime: 4000, answer: 'üì±üíª‚åöüì∑' },
        { id: 24, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ —ç–º–æ–¥–∑–∏', sequence: ['üéÑ', 'üéÅ', 'üéÖ', '‚≠ê'], displayTime: 4000, answer: 'üéÑüéÅüéÖ‚≠ê' },
    
        // –û—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        { id: 25, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –¥–ª–∏–Ω–Ω—É—é —á–∏—Å–ª–æ–≤—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', sequence: ['2', '4', '6', '8', '0', '1', '3', '5'], displayTime: 7000, answer: '24680135' },
        { id: 26, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –∞–ª—Ñ–∞–≤–∏—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫', sequence: ['A', 'B', 'C', 'D', 'E', 'F'], displayTime: 6000, answer: 'ABCDEF' },
        { id: 27, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Ä–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', sequence: ['üî¥', 'üü†', 'üü°', 'üü¢', 'üîµ', 'üü£'], displayTime: 6000, answer: 'üî¥üü†üü°üü¢üîµüü£' },
        { id: 28, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Å–º–µ—à–∞–Ω–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', sequence: ['1', 'A', 'üî¥', '2', 'B', 'üü¢', '3', 'C', 'üîµ'], displayTime: 8000, answer: '1Aüî¥2Büü¢3Cüîµ' },
        { id: 29, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', sequence: ['üé∏', 'üéπ', 'ü•Å', 'üé∫', 'üéª', 'üé∑'], displayTime: 6000, answer: 'üé∏üéπü•Åüé∫üéªüé∑' },
        { id: 30, type: 'memory', instruction: '–ó–∞–ø–æ–º–Ω–∏—Ç–µ —Å–ª–æ–∂–Ω—É—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é', sequence: ['‚≠ê', '7', 'üî∫', 'B', 'üí†', '3', 'üî∂', '9'], displayTime: 7000, answer: '‚≠ê7üî∫Büí†3üî∂9' }
    ],
};

// –¢–ò–ü–´ –ö–ê–ü–ß –î–õ–Ø –†–ê–ù–î–û–ú–ù–û–ì–û –í–´–ë–û–†–ê
const CAPTCHA_TYPES = [
    'math', 'puzzle', 'image', 'sequence', 'logic', 'memory',
    'pattern', 'rotation', 'find_difference', 'count', 'sorting', 
    'matching', 'time', 'geography', 'science', 'programming',
    'crypto', 'analogy', 'word', 'spatial', 'color', 'observation'
];

// –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –†–ê–ë–û–¢–´ –° –ö–ê–ü–ß–ê–ú–ò
class CaptchaUtils {
    // –ì–ï–ù–ï–†–ê–¢–û–† –°–õ–£–ß–ê–ô–ù–´–• –ú–ê–¢–ï–ú–ê–¢–ò–ß–ï–°–ö–ò–• –ö–ê–ü–ß
    static generateRandomMath() {
        const operations = ['+', '-', '√ó', '√∑'];
        const op = operations[Math.floor(Math.random() * operations.length)];
        let a, b, answer;
        
        switch(op) {
            case '+':
                a = Math.floor(Math.random() * 50) + 1;
                b = Math.floor(Math.random() * 50) + 1;
                answer = (a + b).toString();
                break;
            case '-':
                a = Math.floor(Math.random() * 50) + 10;
                b = Math.floor(Math.random() * 10) + 1;
                answer = (a - b).toString();
                break;
            case '√ó':
                a = Math.floor(Math.random() * 10) + 1;
                b = Math.floor(Math.random() * 10) + 1;
                answer = (a * b).toString();
                break;
            case '√∑':
                b = Math.floor(Math.random() * 10) + 1;
                a = b * (Math.floor(Math.random() * 10) + 1);
                answer = (a / b).toString();
                break;
        }
        
        return {
            type: 'math',
            question: `${a} ${op} ${b} = ?`,
            answer: answer,
            difficulty: 'easy'
        };
    }

    static getRandomCaptcha() {
        const type = CAPTCHA_TYPES[Math.floor(Math.random() * CAPTCHA_TYPES.length)];
        const captchas = CAPTCHA_DATABASE[type];
        
        if (!captchas || captchas.length === 0) {
            return this.generateRandomMath();
        }
        
        return captchas[Math.floor(Math.random() * captchas.length)];
    }

    static shuffleArray(array) {
        const shuffled = [...array];
        for (let i = shuffled.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
        }
        return shuffled;
    }

    // –í–ê–õ–ò–î–ê–¶–ò–Ø –î–õ–Ø –í–°–ï–• –¢–ò–ü–û–í –ö–ê–ü–ß
    static validateMathAnswer(input, answer) {
        return input.trim() === answer;
    }

    static validatePuzzleAnswer(selected, answer) {
        return JSON.stringify(selected) === JSON.stringify(answer);
    }

    static validateImageAnswer(selected, options) {
        const correctAnswers = options.filter(opt => opt.correct).map(opt => opt.emoji);
        return JSON.stringify(selected.sort()) === JSON.stringify(correctAnswers.sort());
    }

    static validateSequenceAnswer(input, answer) {
        return input.toUpperCase().replace(/\s/g, '') === answer.toUpperCase().replace(/\s/g, '');
    }

    static validateLogicAnswer(selected, answer) {
        return selected === answer;
    }

    static validateMemoryAnswer(input, answer) {
        return input.replace(/\s/g, '') === answer.replace(/\s/g, '');
    }

    static validatePatternAnswer(selected, answer) {
        return selected === answer;
    }

    static validateRotationAnswer(selected, answer) {
        return selected === answer;
    }

    static validateFindDifferenceAnswer(selected, answer) {
        return selected === answer;
    }

    static validateCountAnswer(input, answer) {
        return input.trim() === answer;
    }

    static validateSortingAnswer(selected, answer) {
        return JSON.stringify(selected) === JSON.stringify(answer);
    }

    static validateMatchingAnswer(selected, answer) {
        return JSON.stringify(selected.sort()) === JSON.stringify(answer.sort());
    }

    static validateTimeAnswer(input, answer) {
        return input.trim() === answer;
    }
    
    static validateGeographyAnswer(selected, answer) {
        return selected === answer;
    }

    static validateScienceAnswer(selected, answer) {
        return selected === answer;
    }

    static validateProgrammingAnswer(selected, answer) {
        return selected === answer;
    }

    static validateCryptoAnswer(input, answer) {
        return input.toUpperCase().replace(/\s/g, '') === answer.toUpperCase().replace(/\s/g, '');
    }

    static validateAnalogyAnswer(selected, answer) {
        return selected === answer;
    }

    static validateWordAnswer(input, answer) {
        return input.toUpperCase().replace(/\s/g, '') === answer.toUpperCase().replace(/\s/g, '');
    }

    static validateSpatialAnswer(selected, answer) {
        return selected === answer;
    }

    static validateColorAnswer(selected, answer) {
        if (Array.isArray(answer)) {
            return JSON.stringify(selected.sort()) === JSON.stringify(answer.sort());
        }
        return selected === answer;
    }

    static validateObservationAnswer(input, answer) {
        return input.toLowerCase().includes(answer.toLowerCase());
    }

    // –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –í–ê–õ–ò–î–ê–¢–û–†
    static validateAnswer(captchaType, userInput, correctAnswer, options = null) {
        switch (captchaType) {
            case 'math': return this.validateMathAnswer(userInput, correctAnswer);
            case 'puzzle': return this.validatePuzzleAnswer(userInput, correctAnswer);
            case 'image': return this.validateImageAnswer(userInput, options);
            case 'sequence': return this.validateSequenceAnswer(userInput, correctAnswer);
            case 'logic': return this.validateLogicAnswer(userInput, correctAnswer);
            case 'memory': return this.validateMemoryAnswer(userInput, correctAnswer);
            case 'pattern': return this.validatePatternAnswer(userInput, correctAnswer);
            case 'rotation': return this.validateRotationAnswer(userInput, correctAnswer);
            case 'find_difference': return this.validateFindDifferenceAnswer(userInput, correctAnswer);
            case 'count': return this.validateCountAnswer(userInput, correctAnswer);
            case 'sorting': return this.validateSortingAnswer(userInput, correctAnswer);
            case 'matching': return this.validateMatchingAnswer(userInput, correctAnswer);
            case 'time': return this.validateTimeAnswer(userInput, correctAnswer);
            case 'geography': return this.validateGeographyAnswer(userInput, correctAnswer);
            case 'science': return this.validateScienceAnswer(userInput, correctAnswer);
            case 'programming': return this.validateProgrammingAnswer(userInput, correctAnswer);
            case 'crypto': return this.validateCryptoAnswer(userInput, correctAnswer);
            case 'analogy': return this.validateAnalogyAnswer(userInput, correctAnswer);
            case 'word': return this.validateWordAnswer(userInput, correctAnswer);
            case 'spatial': return this.validateSpatialAnswer(userInput, correctAnswer);
            case 'color': return this.validateColorAnswer(userInput, correctAnswer);
            case 'observation': return this.validateObservationAnswer(userInput, correctAnswer);
            default: return false;
        }
    }
}

// –≠–ö–°–ü–û–†–¢ –î–õ–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { CAPTCHA_DATABASE, CAPTCHA_TYPES, CaptchaUtils };
}